---
import Layout from '../../layouts/Layout.astro';
// SEO-optimized title and description
const title = "Display Technology Video Guides | LED & LCD Screen Tutorials | Interactive Panel Help"
const description = "Step-by-step video tutorials for display technology setup and operation. Learn how to use LED displays, LCD monitors, and interactive touchscreens with our comprehensive guides."

// Enhanced structured data for video content
const sd = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  "itemListElement": [
    {
      "@type": "VideoObject",
      "position": 1,
      "name": "Wireless Screen Sharing Dongle Operation Guide",
      "description": "Learn how to set up and use the wireless screen sharing dongle for seamless presentations on LED displays and interactive screens.",
      "thumbnailUrl": "https://img.freepik.com/free-photo/wireless-screen-sharing-device-modern-office_157027-1089.jpg",
      "uploadDate": "2024-02-15",
      "contentUrl": "https://www.youtube.com/watch?v=yBDwe-3kvEM",
      "embedUrl": "https://www.youtube.com/embed/yBDwe-3kvEM"
    },
    {
      "@type": "VideoObject",
      "position": 2,
      "name": "Wireless Screen Sharing iOS Operation Guide",
      "description": "Step-by-step guide for iOS device screen sharing with display monitors and interactive panels.",
      "thumbnailUrl": "https://img.freepik.com/free-photo/person-using-ios-device-share-screen_157027-1654.jpg",
      "uploadDate": "2024-02-10",
      "contentUrl": "https://www.youtube.com/watch?v=4fcpqTdEkAw",
      "embedUrl": "https://www.youtube.com/embed/4fcpqTdEkAw"
    },
    {
      "@type": "VideoObject",
      "position": 3,
      "name": "Operation Guide of the Whiteboard on Smart Interactive Displays",
      "description": "Master the interactive whiteboard features on your touchscreen display panels.",
      "thumbnailUrl": "https://images.unsplash.com/photo-1552581234-26160f608093?ixlib=rb-4.0.3",
      "uploadDate": "2024-01-25",
      "contentUrl": "https://www.youtube.com/watch?v=PnAZygWsjLw",
      "embedUrl": "https://www.youtube.com/embed/PnAZygWsjLw"
    }
  ]
}


const guides = [
  {
    title: 'Wireless Screen Sharing Dongle Operation Guide',
    thumbnail: '/guide1.jpg',
    description: 'Learn how to set up and use the wireless screen sharing dongle for seamless presentations.',
    videoId: 'yBDwe-3kvEM',
    youtubeUrl: 'https://www.youtube.com/watch?v=yBDwe-3kvEM'
  },
  {
    title: 'Wireless Screen Sharing iOS Operation Guide',
    thumbnail: '/guide1.jpg',
    description: 'Step-by-step guide for iOS device screen sharing with Uniview displays.',
    videoId: '4fcpqTdEkAw',
    youtubeUrl: 'https://www.youtube.com/watch?v=4fcpqTdEkAw'
  },
  {
    title: 'Operation Guide of the Whiteboard on Uniview Smart Interactive Displays',
    thumbnail: '/guide1.jpg',
    description: 'Master the interactive whiteboard features on your Uniview display.',
    videoId: 'PnAZygWsjLw',
    youtubeUrl: 'https://youtu.be/PnAZygWsjLw'
  },
  {
    title: 'Operation Guide of the Welcome APP on Uniview Smart Interactive Displays',
    thumbnail: '/guide1.jpg',
    description: 'Learn to customize and use the Welcome APP for your interactive display.',
    videoId: 'F6ArD4wkcVc',
    youtubeUrl: 'https://youtu.be/F6ArD4wkcVc'
  },
  {
    title: 'Operation Guide of the Basic',
    thumbnail: '/guide1.jpg',
    description: 'Essential operations and features of Uniview interactive displays.',
    videoId: 'hKyY0_be0JQ',
    youtubeUrl: 'https://youtu.be/hKyY0_be0JQ'
  }
];
---

<Layout title={title} description={description} sd={sd}>
  <!-- Hero Section -->
  <section class="bg-gradient-to-b from-blue-50 to-white py-16">
    <div class="container mx-auto px-4 text-center">
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4"></h1>
      <p class="text-lg text-gray-600 max-w-2xl mx-auto mb-8">
       
      </p>
      <div class="w-20 h-1 bg-gradient-to-r from-purple-600 to-blue-500 mx-auto"></div>
    </div>
  </section>

  <!-- Main Content -->
  <main class="bg-gray-50 py-12">
    <div class="container mx-auto px-4">
      <!-- Guides Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {guides.map((guide, index) => (
          <div class="bg-white rounded-2xl shadow-md overflow-hidden hover:shadow-xl transition-all duration-500 transform hover:-translate-y-2 group">
            <div class="relative">
              <!-- Image Container -->
              <div class="overflow-hidden">
                <img 
                  src={guide.thumbnail} 
                  alt={guide.title}
                  class="w-full h-64 object-contain transition-transform duration-700 group-hover:scale-110"
                />
              </div>

              <!-- Overlay with Play Button -->
              <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-500 flex items-center justify-center">
                <button 
                  class="play-video p-4 bg-white/10 backdrop-blur-md text-white rounded-full flex items-center space-x-3 hover:bg-white/20 transition-all duration-300 transform hover:scale-110 shadow-xl group-hover:translate-y-0 translate-y-4"
                  data-video-id={guide.videoId}
                >
                  <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span class="font-medium tracking-wide">Watch Video</span>
                </button>
              </div>

              <!-- Category Badge -->
              <div class="absolute top-4 left-4">
                <span class="px-3 py-1 bg-white/90 backdrop-blur-sm text-gray-800 text-sm font-medium rounded-full shadow-lg">
                  Tutorial
                </span>
              </div>
              
              <!-- Tutorial Number Badge -->
              <div class="absolute top-4 right-4">
                <span class="flex items-center justify-center w-8 h-8 bg-purple-600 text-white text-sm font-bold rounded-full shadow-lg">
                  {index + 1}
                </span>
              </div>
            </div>

            <!-- Content Section -->
            <div class="p-6 space-y-4">
              <h3 class="text-xl font-bold text-gray-900 line-clamp-2 group-hover:text-purple-600 transition-colors duration-300">
                {guide.title}
              </h3>
              <p class="text-gray-600 line-clamp-3">
                {guide.description}
              </p>

              <!-- Actions Row -->
              <div class="pt-4 flex gap-4">
                <!-- Play Button -->
                <button 
                  class="play-video flex-1 flex items-center justify-center gap-2 py-3 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors"
                  data-video-id={guide.videoId}
                >
                  <svg class="w-5 h-5 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span class="font-medium">Play</span>
                </button>

                <!-- YouTube Link -->
                <a 
                  href={guide.youtubeUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex-1 flex items-center justify-center gap-2 py-3 bg-gradient-to-r from-purple-600 to-blue-500 text-white rounded-lg hover:from-purple-700 hover:to-blue-600 transition-all duration-300"
                >
                  <span class="font-medium">YouTube</span>
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                  </svg>
                </a>
              </div>
            </div>
          </div>
        ))}
      </div>
      
      <!-- Support CTA -->
      <div class="mt-16 bg-white rounded-2xl shadow-lg p-8 text-center">
        <h2 class="text-2xl font-bold mb-4">Need Additional Help?</h2>
        <p class="text-gray-600 mb-6 max-w-2xl mx-auto">
          Our support team is ready to assist you with any questions about our display products and solutions.
        </p>
        <a 
          href="/support/contact" 
          class="inline-flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-all"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />
          </svg>
          <span>Contact Support</span>
        </a>
      </div>
    </div>
  </main>

  <!-- Video Modal with Enhanced Design -->
  <div id="videoModal" class="fixed inset-0 bg-black/90 hidden items-center justify-center z-50 backdrop-blur-sm transition-all duration-300">
    <div class="relative w-full max-w-4xl mx-4">
      <!-- Logo in top left -->
      <div class="absolute -top-16 left-0">
        <img 
          src="/logo.png" 
          alt="Logo" 
          class="h-8 w-auto"
        />
      </div>
      
      <!-- Close Button with Enhanced Style -->
      <button id="closeModal" class="absolute -top-16 right-0 text-white hover:text-gray-300 group">
        <span class="text-sm font-medium mr-2 opacity-0 group-hover:opacity-100 transition-opacity">Close</span>
        <svg class="w-8 h-8 inline-block" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
      
      <!-- Video Container with Border -->
      <div class="relative pt-[56.25%] rounded-xl overflow-hidden border-2 border-white/10">
        <iframe id="videoFrame" class="absolute inset-0 w-full h-full" frameborder="0" allowfullscreen></iframe>
      </div>
    </div>
  </div>
</Layout>

<script>
  function initializeVideoHandlers() {
    const modal = document.getElementById('videoModal');
    const videoFrame = document.getElementById('videoFrame') as HTMLIFrameElement;
    const closeButton = document.getElementById('closeModal');
    
    function openVideo(videoId: string) {
      if (modal && videoFrame) {
        videoFrame.src = `https://www.youtube.com/embed/${videoId}`;
        modal.classList.remove('hidden');
        modal.classList.add('flex');
      }
    }
    
    function closeVideo() {
      if (modal && videoFrame) {
        videoFrame.src = '';
        modal.classList.add('hidden');
        modal.classList.remove('flex');
      }
    }
    
    // Update the event handlers to only handle play button clicks
    document.querySelectorAll('.play-video').forEach(button => {
      button.addEventListener('click', (e) => {
        const videoId = (e.currentTarget as HTMLElement).dataset.videoId;
        if (videoId) openVideo(videoId);
      });
    });
    
    // Close modal handlers
    closeButton?.addEventListener('click', closeVideo);
    modal?.addEventListener('click', (e) => {
      if (e.target === modal) closeVideo();
    });
  }

  // Initialize when the page loads
  document.addEventListener('DOMContentLoaded', initializeVideoHandlers);
</script>