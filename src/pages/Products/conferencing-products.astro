---
import Layout from '../../layouts/Layout.astro';
// SEO-optimized title and description
const title = "Video Conferencing Display Solutions | LED & LCD Professional Displays"
const description = "Premium video conferencing solutions featuring advanced LED and LCD display technology. High-resolution screens, educational board integration, and digital signage compatibility for professional meeting environments."

// Schema markup for product page
const sd = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  "name": "Video Conferencing Display Solutions",
  "description": "Professional video conferencing products with high-quality display technology",
  "offers": {
    "@type": "AggregateOffer",
    "availability": "https://schema.org/InStock",
    "offerCount": "7"
  },
  "itemListElement": [
    {
      "@type": "Product",
      "name": "Unear A20 All-In-One Video Conference Camera",
      "image": "https://images.unsplash.com/photo-1517245386807-bb43f82c33c4?w=800",
      "description": "Professional 4K display conferencing system with AI-powered features and LED display compatibility",
      "brand": {
        "@type": "Brand",
        "name": "Lovosis Display"
      },
      "offers": {
        "@type": "Offer",
        "availability": "https://schema.org/InStock"
      }
    }
  ]
}

const highlights = [
  {
    id: "01",
    title: "Face-detection auto focus technology",
    content: "Enhance your video conferencing experience with face-detection auto-focus technology. This advanced feature automatically identifies and focuses on faces in real-time, ensuring sharp, clear visuals for all participants. Whether in a meeting or presentation, the technology adapts to movement, delivering seamless communication without manual adjustments.",
    image: "/Conferencing/img1.webp"
  },
  {
    id: "02",
    title: "Light automated correction",
    content: "Experience optimal video quality with light automated correction technology, which automatically adjusts lighting to enhance clarity in any environment. Whether you're in low light or bright conditions, this feature ensures clear and well-lit visuals for seamless video conferencing.",
    image: "/Conferencing/img2.webp"
  },
  {
    id: "03",
    title: "AI noise cancelling",
    content: "AI noise-cancelling technology filters out background noise, ensuring crystal-clear audio during video calls. With intelligent sound isolation, your voice is heard loud and clear, free from distractions like ambient noise or keyboard typing.",
    image: "/Conferencing/img3.jpg"
  },
  {
    id: "04",
    title: "Face to face communication experience",
    content: "Enjoy an immersive face-to-face communication experience with high-quality video and sound that brings virtual meetings to life. The combination of sharp visuals, auto-focus, and enhanced audio makes remote conversations feel as natural as in-person interactions.",
    image: "/Conferencing/img4.jpg"
  },
  {
    id: "05",
    title: "Unimagined pickup range",
    content: "Achieve superior audio capture with an unimagined pickup range that ensures everyone in the room is heard clearly. This advanced technology enhances the microphone's reach, making it ideal for group meetings and large spaces without compromising sound quality.",
    image: "/Conferencing/img5.jpg"
  }
];

const products = [
  {
    id: 'unear-a20',
    name: 'Unear A20',
    description: 'The Unear A20 is a cutting-edge video conferencing solution designed with face-detection auto-focus, light automated correction, and AI noise-cancelling technology. It provides a superior face-to-face communication experience with an unimagined pickup range, ensuring clear visuals and sound for every participant. Ideal for corporate meetings, remote work, and virtual collaborations, the Unear A20 delivers unmatched performance and reliability.',
    features: [
      'AI Face Detection',
      'HDR Technology',
      'Noise Cancellation',
      '4K Resolution',
      'Intelligent Tracking',
      'Wide-angle Coverage'
    ],
    specs: [
      { label: 'Resolution', value: '4K Ultra HD' },
      { label: 'Field of View', value: '120Â° Wide-angle' },
      { label: 'Audio', value: 'Built-in Microphone Array' },
      { label: 'Connectivity', value: 'USB 3.0/Type-C' }
    ],
    useCases: [
      'Corporate Meeting Rooms',
      'Distance Learning',
      'Remote Collaboration',
      'Virtual Events'
    ],
    image: '/Conferencing/Unear A20.jpg'
  }
];
---

<Layout title={title} description={description} sd={sd}>
  <div class="bg-white" x-data="{ activeSection: '01' }">
    <!-- Header Section -->
    <div class="relative h-[60vh] overflow-hidden">
      <img
        src="/Conferencing/Header.jpg"
        alt="Video Conferencing Header"
        class="w-full h-full object-cover"
      />
      <div class="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
        <h1 class="text-5xl font-bold text-white text-center">
          
          <span class="block text-2xl mt-4 font-normal"></span>
        </h1>
      </div>
    </div>

    <!-- Highlights Section -->
    <div class="max-w-7xl mx-auto px-4 py-16">
      <div class="flex flex-col lg:flex-row gap-8">
        <!-- Sidebar Navigation -->
        <div class="lg:w-1/4">
          <div class="sticky top-8">
            <h2 class="text-2xl font-bold text-gray-900 mb-6">Highlights</h2>
            <nav class="space-y-2">
              {highlights.map((item) => (
                <button
                  class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-100 transition-colors duration-200"
                  id={`nav-${item.id}`}
                  data-section={item.id}
                >
                  <span class="text-blue-600 font-semibold">{item.id}</span>
                  <span class="ml-2 text-gray-700">{item.title}</span>
                </button>
              ))}
            </nav>
          </div>
        </div>

        <!-- Content Section -->
        <div class="lg:w-3/4">
          {highlights.map((item) => (
            <div 
              id={`content-${item.id}`} 
              class="hidden opacity-0 transition-opacity duration-300"
              style={item.id === "01" ? "display: block; opacity: 1;" : ""}
            >
              <div class="bg-white rounded-xl shadow-lg overflow-hidden">
                <div class="relative h-96">
                  <img
                    src={item.image}
                    alt={item.title}
                    class="w-full h-full object-contain"
                  />
                </div>
                <div class="p-8">
                  <h3 class="text-2xl font-bold text-gray-900 mb-4">{item.title}</h3>
                  <p class="text-gray-600 leading-relaxed">{item.content}</p>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>

    <!-- Products Section -->
    <div class="max-w-7xl mx-auto px-4 py-16 bg-gray-50">
      <h2 class="text-3xl font-bold text-center mb-16">
        Products
        <span class="block text-lg font-normal text-gray-600 mt-2">Video Conferencing Products</span>
      </h2>

      <!-- Replace the existing product card markup in the Products Section with this: -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {products.map(product => (
          <div class="bg-white rounded-xl shadow-lg overflow-hidden transition-all duration-300 hover:-translate-y-1">
            <div class="relative h-40 overflow-hidden">
              <img 
                src={product.image} 
                alt={product.name}
                class="w-full h-full object-contain transform hover:scale-105 transition-transform duration-500"
              />
            </div>

            <div class="p-4">
              <h3 class="text-lg font-bold text-gray-900 mb-1">{product.name}</h3>
              <p class="text-sm text-gray-600 mb-3">{product.description}</p>
              
              <div class="flex flex-wrap gap-1 mb-4">
                {product.features.slice(0, 3).map(feature => (
                  <span class="px-2 py-0.5 text-xs bg-blue-50 text-blue-600 rounded-full font-medium">
                    {feature}
                  </span>
                ))}
                {product.features.length > 3 && (
                  <span class="px-2 py-0.5 text-xs bg-gray-50 text-gray-600 rounded-full font-medium">
                    +{product.features.length - 3} more
                  </span>
                )}
              </div>
              
              <button 
                class="w-full bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-lg px-4 py-2 text-sm hover:from-blue-700 hover:to-blue-800 transition-all duration-200 flex items-center justify-center gap-2"
                data-product={JSON.stringify(product)}
              >
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                </svg>
                View Details
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Product Modal -->
    <div id="productModal" class="fixed inset-0 bg-black/50 hidden z-50">
      <div class="fixed left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 w-full max-w-6xl bg-white rounded-2xl shadow-2xl">
        <div class="relative p-8 max-h-[90vh] overflow-y-auto">
          <!-- Logo in top left -->
          <div class="absolute top-6 left-6">
            <img 
              src="/logo (1).svg" 
              alt="Lovosis Display Logo" 
              class="h-10 w-auto"
            />
          </div>
          
          <!-- Close Button -->
          <button class="close-modal absolute top-6 right-6 text-gray-500 hover:text-gray-700">
            <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
            </svg>
          </button>

          <!-- Add margin-top to the content for spacing below logo and close button -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-12 mt-10">
            <!-- Left Column -->
            <div class="space-y-6">
              <img id="modalImage" src="" alt="" class="w-full rounded-xl shadow-xl">
              
              <!-- Reviews Section -->
              <div class="bg-gray-50 rounded-xl p-6">
                <div class="flex items-center justify-between mb-4">
                  <h4 class="text-xl font-semibold text-gray-900">Product Reviews</h4>
                  <div class="flex items-center gap-1">
                    <div class="flex items-center">
                      {[1, 2, 3, 4, 5].map((star) => (
                        <svg class="w-6 h-6 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                        </svg>
                      ))}
                    </div>
                    <span class="text-lg font-bold text-gray-900">4.8</span>
                    <span class="text-gray-600">(120 reviews)</span>
                  </div>
                </div>
              </div>

              <!-- Consultation Section -->
              <div class="space-y-4">
                <h4 class="text-xl font-semibold text-gray-900">Professional Consultation</h4>
                <div class="grid grid-cols-2 gap-4">
                  <a href="tel:+918409528159" class="flex items-center justify-center gap-2 px-6 py-4 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                    </svg>
                    <span class="font-semibold">Direct Support</span>
                  </a>
                  <a href="https://wa.me/918409528159" target="_blank" class="flex items-center justify-center gap-2 px-6 py-4 bg-green-500 text-white rounded-xl hover:bg-green-600 transition-colors">
                    <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12.012 2c-5.506 0-9.989 4.478-9.99 9.984a9.964 9.964 0 001.333 4.993L2 22l5.233-1.237a9.994 9.994 0 004.779 1.217h.004c5.505 0 9.988-4.478 9.989-9.984 0-2.669-1.037-5.176-2.922-7.062A9.935 9.935 0 0012.012 2z"/>
                    </svg>
                    <span class="font-semibold">WhatsApp</span>
                  </a>
                </div>
                <a href="mailto:adeebjamil0707@gmail.com" class="w-full px-6 py-4 bg-gray-100 text-gray-800 rounded-xl hover:bg-gray-200 transition-colors flex items-center justify-center gap-2">
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                  </svg>
                  <span class="font-semibold">Request Specifications</span>
                </a>
              </div>
            </div>

            <!-- Right Column -->
            <div class="space-y-8">
              <div>
                <h3 id="modalTitle" class="text-4xl font-bold text-gray-900 mb-4"></h3>
                <p id="modalDescription" class="text-lg text-gray-600 mb-6"></p>
                
                <!-- Key Features -->
                <div class="mb-8">
                  <h4 class="text-xl font-semibold text-gray-900 mb-4">Key Features</h4>
                  <div id="modalFeatures" class="space-y-3"></div>
                </div>

                <!-- Technical Specifications -->
                <div class="mb-8">
                  <h4 class="text-xl font-semibold text-gray-900 mb-4">Technical Specifications</h4>
                  <div class="grid grid-cols-1 md:grid-cols-2 gap-4" id="modalSpecs"></div>
                </div>

                <!-- Use Cases -->
                <div class="mb-8">
                  <h4 class="text-xl font-semibold text-gray-900 mb-4">Ideal Applications</h4>
                  <div class="bg-gray-50 rounded-xl p-6">
                    <ul class="grid grid-cols-1 md:grid-cols-2 gap-4" id="modalUseCases"></ul>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const buttons = document.querySelectorAll('[data-section]');
    const sections = document.querySelectorAll('[id^="content-"]');
    
    function switchSection(id: string) {
      sections.forEach(section => {
        if (section instanceof HTMLElement) {
          section.style.opacity = '0';
          section.style.display = 'none';
        }
      });

      buttons.forEach(btn => {
        btn.classList.remove('bg-blue-50');
      });

      const selectedSection = document.getElementById(`content-${id}`);
      const selectedButton = document.querySelector(`[data-section="${id}"]`);

      if (selectedSection instanceof HTMLElement) {
        selectedSection.style.display = 'block';
        setTimeout(() => {
          selectedSection.style.opacity = '1';
        }, 10);
      }

      if (selectedButton) {
        selectedButton.classList.add('bg-blue-50');
      }
    }

    buttons.forEach(button => {
      button.addEventListener('click', () => {
        const sectionId = button.getAttribute('data-section');
        if (sectionId) switchSection(sectionId);
      });
    });

    // Show first section by default
    const firstButton = document.querySelector('[data-section="01"]');
    if (firstButton) {
      firstButton.classList.add('bg-blue-50');
    }
  });

  // Add to your existing script section
  function showProductDetails(product: {
    image: string;
    name: string;
    description: string;
    features: string[];
    specs: Array<{ label: string; value: string }>;
    useCases: string[];
  }) {
    const modal = document.getElementById('productModal');
    const modalImage = document.getElementById('modalImage') as HTMLImageElement;
    const modalTitle = document.getElementById('modalTitle');
    const modalDescription = document.getElementById('modalDescription');
    const modalFeatures = document.getElementById('modalFeatures');
    const modalSpecs = document.getElementById('modalSpecs');
    const modalUseCases = document.getElementById('modalUseCases');

    if (modal && modalImage && modalTitle && modalDescription && modalFeatures && modalSpecs && modalUseCases) {
      modalImage.src = product.image;
      modalImage.alt = product.name;
      modalTitle.textContent = product.name;
      modalDescription.textContent = `${product.description} - Professional video conferencing solution designed for modern collaboration needs.`;
      
      modalFeatures.innerHTML = product.features
        .map(feature => `
          <div class="flex items-center gap-2">
            <svg class="w-5 h-5 text-blue-600 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
            <span class="text-gray-700">${feature}</span>
          </div>
        `)
        .join('');

      modalSpecs.innerHTML = product.specs
        .map(spec => `
          <div class="flex flex-col">
            <span class="text-sm font-medium text-gray-500">${spec.label}</span>
            <span class="text-base font-semibold text-gray-900">${spec.value}</span>
          </div>
        `)
        .join('');

      modalUseCases.innerHTML = product.useCases
        .map(useCase => `
          <li class="flex items-center gap-2">
            <svg class="w-5 h-5 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            <span>${useCase}</span>
          </li>
        `)
        .join('');

      modal.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
    }
  }

  // Add click handlers for products
  document.querySelectorAll('[data-product]').forEach(button => {
    button.addEventListener('click', () => {
      const product = JSON.parse((button as HTMLElement).dataset.product || '{}');
      showProductDetails(product);
    });
  });

  // Modal close functionality
  const modal = document.getElementById('productModal');
  const closeBtn = document.querySelector('.close-modal');

  if (modal && closeBtn) {
    const closeModal = () => {
      modal.classList.add('hidden');
      document.body.style.overflow = 'auto';
    };

    closeBtn.addEventListener('click', closeModal);
    modal.addEventListener('click', (e) => {
      if (e.target === modal) closeModal();
    });
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
        closeModal();
      }
    });
  }
</script>

<style>
  .transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }

  [id^="content-"] {
    transition: opacity 0.3s ease-in-out;
  }
</style>