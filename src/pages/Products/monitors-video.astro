---
import Layout from '../../layouts/Layout.astro';
// SEO-optimized title and description
const title = "Professional Monitors & Display Solutions | LED, LCD & Educational Screens | Lovosis Display"
const description = "Explore Lovosis Display's professional monitor range including high-resolution LED displays, LCD screens, educational display boards, and CCTV monitors. Commercial-grade display solutions with 24/7 reliability and superior image quality."

// Schema markup for better SEO
const sd = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  "name": "Professional Monitors and Display Solutions",
  "description": "Collection of professional monitors including CCTV displays, LED screens, LCD displays, and educational screens",
  "mainEntity": {
    "@type": "ItemList",
    "itemListElement": [
      {
        "@type": "ListItem",
        "position": 1,
        "item": {
          "@type": "Product",
          "name": "MW3243-F-V2 43\" 4K LED Monitor",
          "description": "Professional 43-inch 4K LED display monitor for surveillance and digital signage applications",
          "image": "https://images.unsplash.com/photo-1517245386807-bb43f82c33c4?w=800",
          "category": "Display Monitors",
          "brand": {
            "@type": "Brand",
            "name": "Lovosis Display"
          },
          "offers": {
            "@type": "Offer",
            "availability": "https://schema.org/InStock"
          }
        }
      },
      {
        "@type": "ListItem",
        "position": 2,
        "item": {
          "@type": "Product",
          "name": "MW3255-F-V2 55\" 4K LED Monitor",
          "description": "High-performance 55-inch 4K LED display screen for professional applications and digital billboards",
          "image": "https://images.unsplash.com/photo-1540575339264-569259387a45?w=800",
          "category": "Display Monitors",
          "brand": {
            "@type": "Brand",
            "name": "Lovosis Display"
          },
          "offers": {
            "@type": "Offer",
            "availability": "https://schema.org/InStock"
          }
        }
      },
      {
        "@type": "ListItem",
        "position": 3,
        "item": {
          "@type": "Product",
          "name": "MW-LC24-E 24\" IT Monitor",
          "description": "24-inch professional LED display for office and educational applications with excellent visual clarity",
          "image": "https://images.unsplash.com/photo-1517245386807-bb43f82c33c4?w=800",
          "category": "Display Monitors",
          "brand": {
            "@type": "Brand",
            "name": "Lovosis Display"
          },
          "offers": {
            "@type": "Offer",
            "availability": "https://schema.org/InStock"
          }
        }
      }
    ]
  }
}

const highlights = [
  {
    id: "01",
    title: "CCTV Monitor",
    content: "Professional grade monitors designed specifically for surveillance applications, offering 24/7 reliability and superior image quality.",
    image: "/Monitors/CCTV.jpg"
  },
  {
    id: "02",
    title: "IT Monitor",
    content: "High-performance IT monitors for office and home use, delivering crystal clear visuals and ergonomic design.",
    image: "/Monitors/IT.jpg"
  }
];

const products = [
  // CCTV Entry Products
  {
    id: 'mw3224-v',
    name: 'MW3224-V',
    description: '24" LED FHD Monitor',
    category: 'cctv',
    subcategory: 'entry',
    image: '/Monitors/MW3224-V.webp'
  },
  {
    id: 'mw3243-f-v2',
    name: 'MW3243-F-V2',
    description: '43" 4K LED Monitor',
    category: 'cctv',
    subcategory: 'entry',
    image: '/Monitors/MW3243-F-V2.jpg'
  },
  {
    id: 'mw3255-f-v2',
    name: 'MW3255-F-V2',
    description: '55" 4K LED Monitor',
    category: 'cctv',
    subcategory: 'entry',
    image: '/Monitors/MW3255-F-V2.png'
  },
  {
    id: 'mw3222-v-dt',
    name: 'MW3222-V-DT',
    description: 'LED FHD Monitor',
    category: 'cctv',
    subcategory: 'entry',
    image: '/Monitors/MW3222-V-DT.jpg'
  },
  {
    id: 'mw3232-v-k2',
    name: 'MW3232-V-K2',
    description: '32 Inches Plastic Case LCD Monitor',
    category: 'cctv',
    subcategory: 'entry',
    image: '/Monitors/MW3232-V-K2.png'
  },

  // CCTV Pro Products
  {
    id: 'mw3232-e',
    name: 'MW3232-E',
    description: '32 inch LED FHD Monitor',
    category: 'cctv',
    subcategory: 'pro',
    image: '/Monitors/MW3232-E.jpg'
  },
  {
    id: 'mw3243-e',
    name: 'MW3243-E',
    description: '43 inch LED FHD Monitor',
    category: 'cctv',
    subcategory: 'pro',
    image: '/Monitors/MW3243-E.png'
  },

  // Home & Office Products
  {
    id: 'mw-lc24',
    name: 'MW-LC24',
    description: '24" IT Monitor',
    category: 'homeoffice',
    image: '/Monitors/MW-LC24.jpg'
  },
  {
    id: 'mw-lc22',
    name: 'MW-LC22',
    description: '22 Inch Plastic Shell IT Monitor',
    category: 'homeoffice',
    image: '/Monitors/MW-LC22.png'
  },
  {
    id: 'mw-lc22-e',
    name: 'MW-LC22-E',
    description: '22 inches IT Monitor',
    category: 'homeoffice',
    image: '/Monitors/MW-LC22-E.jpg'
  },
  {
    id: 'mw-lc24-e',
    name: 'MW-LC24-E',
    description: '24 inches IT Monitor',
    category: 'homeoffice',
    image: '/Monitors/MW-LC24.jpg'
  },
  {
    id: 'mw-lc27-b',
    name: 'MW-LC27-B',
    description: '27 inches IT Monitor',
    category: 'homeoffice',
    image: '/Monitors/MW-LC27-B.jpg'
  },
  {
    id: 'mw-lc27-e',
    name: 'MW-LC27-E',
    description: '27 inches IT Monitor',
    category: 'homeoffice',
    image: '/Monitors/MW-LC27-E.jpg'
  },

  // Bracket Products
  {
    id: 'hb-5043-h',
    name: 'HB-5043-H',
    description: '4K Monitor Base Bracket',
    category: 'bracket',
    image: '/Monitors/HB-5043-H.jpg'
  },
  {
    id: 'hb-5055-h',
    name: 'HB-5055-H',
    description: '4K Monitor Base Bracket',
    category: 'bracket',
    image: '/Monitors/HB-5055-H.jpg'
  },
  {
    id: 'hb-4022-e',
    name: 'HB-4022-E',
    description: '22" Wall-hanging Mounts',
    category: 'bracket',
    image: '/Monitors/HB-4022-E.jpg'
  },
  {
    id: 'hb-4032-e',
    name: 'HB-4032-E',
    description: '32"-55" Wall-hanging Mounts',
    category: 'bracket',
    image: '/Monitors/HB-4032-E.jpg'
  },
  {
    id: 'hb-5032-e',
    name: 'HB-5032-E',
    description: '32" Desk Mechanical Mounts',
    category: 'bracket',
    image: '/Monitors/HB-5032-E.jpg'
  },
  {
    id: 'hb-5043-e',
    name: 'HB-5043-E',
    description: '43" Desk Mechanical Mounts',
    category: 'bracket',
    image: '/Monitors/HB-5043-E.jpg'
  }
];

const categories = [
  { id: 'all', name: 'ALL' },
  { 
    id: 'cctv', 
    name: 'CCTV',
    subcategories: ['entry', 'pro']
  },
  { id: 'homeoffice', name: 'Home&Office' },
  { id: 'bracket', name: 'Bracket' }
];
---

<Layout title={title} description={description} sd={sd}>
  <div class="bg-white">
    <!-- Header Section -->
    <div class="relative h-[60vh] overflow-hidden">
      <img
        src="/Monitors/Header.jpg"
        alt="Monitors Header"
        class="w-full h-full object-cover"
      />
      <div class="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
        <h1 class="text-5xl font-bold text-white text-center">
          
          <span class="block text-2xl mt-4 font-normal"></span>
        </h1>
      </div>
    </div>

    <!-- Highlights Section -->
    <div class="max-w-7xl mx-auto px-4 py-16">
      <h2 class="text-3xl font-bold text-center mb-16">
        Highlights
        <span class="block w-24 h-1 bg-gradient-to-r from-blue-600 to-blue-800 mx-auto mt-4"></span>
      </h2>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-12">
        {highlights.map((item) => (
          <div class="group">
            <div class="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-300">
              <div class="relative h-64 overflow-hidden">
                <img
                  src={item.image}
                  alt={item.title}
                  class="w-full h-full object-contain transform group-hover:scale-110 transition-transform duration-700"
                />
                <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-black/30 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              </div>
              <div class="p-8">
                <div class="flex items-center gap-3 mb-4">
                  <span class="text-blue-600 text-lg font-bold">{item.id}</span>
                  <h3 class="text-2xl font-bold text-gray-900">{item.title}</h3>
                </div>
                <p class="text-gray-600 leading-relaxed">{item.content}</p>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Products Section -->
    <div class="max-w-7xl mx-auto px-4 py-16 bg-gray-50">
      <h2 class="text-3xl font-bold text-center mb-16">
        Products
        <span class="block text-lg font-normal text-gray-600 mt-2">Monitors</span>
      </h2>

      <!-- Product Filters -->
      <div class="flex flex-col items-center gap-4 mb-12">
        <div class="inline-flex rounded-md shadow-sm">
          {categories.map(category => (
            <button 
              class="px-6 py-2 text-sm font-medium border transition-colors
              first:rounded-l-lg last:rounded-r-lg
              data-[active=true]:bg-blue-600 data-[active=true]:text-white data-[active=true]:border-blue-600
              data-[active=false]:bg-white data-[active=false]:text-gray-600 hover:bg-blue-600 hover:text-white hover:border-blue-600"
              data-filter={category.id}
              data-active={category.id === 'all'}
            >
              {category.name}
            </button>
          ))}
        </div>

        <!-- Subcategories for CCTV -->
        <div id="subcategories" class="hidden">
          <div class="inline-flex rounded-md shadow-sm">
            <button
              class="px-4 py-1 text-sm font-medium border rounded-l-lg transition-colors"
              data-subfilter="entry"
            >
              Entry
            </button>
            <button
              class="px-4 py-1 text-sm font-medium border-t border-b border-r rounded-r-lg transition-colors"
              data-subfilter="pro"
            >
              Pro
            </button>
          </div>
        </div>
      </div>

      <!-- Product Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {products.map(product => (
          <div 
            class="bg-white rounded-xl shadow-lg overflow-hidden transition-all duration-300 hover:-translate-y-1"
            data-category={product.category}
            data-subcategory={product.subcategory}
          >
            <div class="relative h-48 overflow-hidden">
              <img 
                src={product.image} 
                alt={product.name}
                class="w-full h-full object-contain transform hover:scale-105 transition-transform duration-500"
              />
            </div>

            <div class="p-6">
              <h3 class="text-xl font-bold text-gray-900 mb-2">{product.name}</h3>
              <p class="text-gray-600 mb-6">{product.description}</p>
              
              <button 
                class="w-full bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-xl px-6 py-3 hover:from-blue-700 hover:to-blue-800 transform hover:-translate-y-0.5 transition-all duration-200 shadow-lg hover:shadow-xl flex items-center justify-center group relative overflow-hidden"
                data-product={JSON.stringify({
                  ...product,
                  features: [
                    'Professional Grade Display',
                    '24/7 Operation Capability',
                    'Multiple Input Interfaces',
                    'High Reliability'
                  ]
                })}
              >
                <span class="relative z-10 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                  </svg>
                  <span class="font-semibold">View Details</span>
                </span>
                <div class="absolute inset-0 bg-gradient-to-r from-blue-700 to-blue-800 transform scale-x-0 group-hover:scale-x-100 transition-transform origin-left duration-200"></div>
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- Product Modal -->
  <div id="productModal" class="fixed inset-0 bg-black/50 hidden z-50">
    <div class="fixed left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 w-full max-w-6xl bg-white rounded-2xl shadow-2xl">
      <div class="relative p-8 max-h-[90vh] overflow-y-auto">
        <!-- Logo in top left -->
        <div class="absolute top-6 left-6">
          <img 
            src="/logo (1).svg" 
            alt="Lovosis Display Logo" 
            class="h-10 w-auto"
          />
        </div>
        
        <!-- Close Button -->
        <button class="close-modal absolute top-6 right-6 text-gray-500 hover:text-gray-700">
          <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
        </button>

        <!-- Add margin-top to the content for spacing below the logo -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-12 mt-10">
          <div class="space-y-6">
            <!-- Image Section -->
            <img id="modalImage" src="" alt="" class="w-full rounded-xl shadow-xl">
            
            <!-- Reviews Section -->
            <div class="bg-gray-50 rounded-xl p-6">
              <div class="flex items-center justify-between mb-4">
                <h4 class="text-xl font-semibold text-gray-900">Product Reviews</h4>
                <div class="flex items-center gap-1">
                  <div class="flex items-center">
                    {[1, 2, 3, 4, 5].map((star) => (
                      <svg class="w-6 h-6 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                      </svg>
                    ))}
                  </div>
                  <span class="text-lg font-bold text-gray-900">4.8</span>
                  <span class="text-gray-600">(120 reviews)</span>
                </div>
              </div>
            </div>

            <!-- Consultation Section -->
            <div class="space-y-4">
              <h4 class="text-xl font-semibold text-gray-900">Professional Consultation</h4>
              <div class="grid grid-cols-2 gap-4">
                <a href="tel:+918409528159" class="flex items-center justify-center gap-2 px-6 py-4 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors">
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                  </svg>
                  <span class="font-semibold">Direct Support</span>
                </a>
                <a href="https://wa.me/918409528159" target="_blank" class="flex items-center justify-center gap-2 px-6 py-4 bg-green-500 text-white rounded-xl hover:bg-green-600 transition-colors">
                  <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12.012 2c-5.506 0-9.989 4.478-9.99 9.984a9.964 9.964 0 001.333 4.993L2 22l5.233-1.237a9.994 9.994 0 004.779 1.217h.004c5.505 0 9.988-4.478 9.989-9.984 0-2.669-1.037-5.176-2.922-7.062A9.935 9.935 0 0012.012 2z"/>
                  </svg>
                  <span class="font-semibold">WhatsApp</span>
                </a>
              </div>
              <a href="mailto:adeebjamil0707@gmail.com" class="w-full px-6 py-4 bg-gray-100 text-gray-800 rounded-xl hover:bg-gray-200 transition-colors flex items-center justify-center gap-2">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                </svg>
                <span class="font-semibold">Request Specifications</span>
              </a>
            </div>
          </div>

          <!-- Right Side Content -->
          <div class="space-y-8">
            <div>
              <h3 id="modalTitle" class="text-4xl font-bold text-gray-900 mb-4"></h3>
              <p id="modalDescription" class="text-lg text-gray-600 mb-6"></p>
              
              <!-- Key Features -->
              <div class="mb-8">
                <h4 class="text-xl font-semibold text-gray-900 mb-4">Key Features</h4>
                <div id="modalFeatures" class="space-y-3"></div>
              </div>

              <!-- Technical Specifications -->
              <div class="mb-8">
                <h4 class="text-xl font-semibold text-gray-900 mb-4">Technical Excellence</h4>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4" id="modalSpecs"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
</Layout>

<script>
  const filterButtons = document.querySelectorAll('[data-filter]');
  const subfilterButtons = document.querySelectorAll('[data-subfilter]');
  const productCards = document.querySelectorAll('[data-category]');
  const subcategoriesDiv = document.getElementById('subcategories');

  function filterProducts(category: string | undefined, subcategory: string | null = null) {
    // Update button states
    filterButtons.forEach(btn => {
      if (btn instanceof HTMLElement) {
        const isActive = btn.dataset.filter === category;
        btn.dataset.active = isActive.toString();
      }
    });

    // Show/hide subcategories
    if (subcategoriesDiv) {
      subcategoriesDiv.style.display = category === 'cctv' ? 'block' : 'none';
    }

    // Filter products
    productCards.forEach(card => {
      if (card instanceof HTMLElement) {
        const showCard = category === 'all' || 
          (card.dataset.category === category && 
           (!subcategory || card.dataset.subcategory === subcategory));

        if (showCard) {
          card.style.display = 'block';
          setTimeout(() => {
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
          }, 10);
        } else {
          card.style.opacity = '0';
          card.style.transform = 'translateY(20px)';
          setTimeout(() => {
            card.style.display = 'none';
          }, 300);
        }
      }
    });
  }

  filterButtons.forEach(button => {
    button.addEventListener('click', () => {
      const category = button.getAttribute('data-filter');
      if (category) filterProducts(category);
    });
  });

  subfilterButtons.forEach(button => {
    button.addEventListener('click', () => {
      const subcategory = button.getAttribute('data-subfilter');
      if (subcategory) filterProducts('cctv', subcategory);
    });
  });

  // Initialize with all products shown
  filterProducts('all');

  // Add this to your existing script section
  function showProductDetails(product: {
    image: string;
    name: string;
    description: string;
    features: string[];
    category: string;
  }) {
    const modal = document.getElementById('productModal');
    const modalImage = document.getElementById('modalImage') as HTMLImageElement;
    const modalTitle = document.getElementById('modalTitle');
    const modalDescription = document.getElementById('modalDescription');
    const modalFeatures = document.getElementById('modalFeatures');
    const modalSpecs = document.getElementById('modalSpecs');

    if (modal && modalImage && modalTitle && modalDescription && modalFeatures && modalSpecs) {
      modalImage.src = product.image;
      modalImage.alt = product.name;
      modalTitle.textContent = product.name;
      modalDescription.textContent = `${product.description} - Professional grade display solution offering superior image quality and reliable performance.`;
      
      modalFeatures.innerHTML = product.features
        .map(feature => `
          <div class="flex items-center gap-2">
            <svg class="w-5 h-5 text-blue-600 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
            <span class="text-gray-700">${feature}</span>
          </div>
        `)
        .join('');

      const specs = [
        { label: 'Display Type', value: 'LED/LCD' },
        { label: 'Resolution', value: 'Up to 4K' },
        { label: 'Operation', value: '24/7' },
        { label: 'Input Interface', value: 'HDMI, VGA, DVI' }
      ];

      modalSpecs.innerHTML = specs
        .map(spec => `
          <div class="flex flex-col">
            <span class="text-sm font-medium text-gray-500">${spec.label}</span>
            <span class="text-base font-semibold text-gray-900">${spec.value}</span>
          </div>
        `)
        .join('');

      modal.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
    }
  }

  // Add click handlers for products
  document.querySelectorAll('[data-product]').forEach(button => {
    button.addEventListener('click', () => {
      const product = JSON.parse((button as HTMLElement).dataset.product || '{}');
      showProductDetails(product);
    });
  });

  // Modal close functionality
  const modal = document.getElementById('productModal');
  const closeBtn = document.querySelector('.close-modal');

  if (modal && closeBtn) {
    const closeModal = () => {
      modal.classList.add('hidden');
      document.body.style.overflow = 'auto';
    };

    closeBtn.addEventListener('click', closeModal);
    modal.addEventListener('click', (e) => {
      if (e.target === modal) closeModal();
    });
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
        closeModal();
      }
    });
  }
</script>

<style>
  .group:hover .group-hover\:scale-110 {
    transform: scale(1.1);
  }

  .group:hover .group-hover\:opacity-100 {
    opacity: 1;
  }

  [data-category] {
    transition: all 0.3s ease-in-out;
  }
</style>